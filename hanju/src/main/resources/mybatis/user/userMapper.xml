<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hanju.user.mapper.UserMapper">	
	<select id="idCheck" parameterType="hashmap" resultType="Integer">	
		SELECT COUNT(*)
		FROM HANJU_USER
		WHERE USER_ID = #{userId} 
	</select>
	<select id="infoUser" parameterType="hashmap" resultType="UserModel">
		SELECT *
		FROM HANJU_USER
		WHERE USER_ID = #{userId} 
	</select>
	<select id="loginUser" parameterType="hashmap" resultType="UserModel">
		SELECT * 
		FROM HANJU_USER
		WHERE USER_ID = #{userId} AND PASSWORD = #{password}
	</select>
	<select id="allUserList" parameterType="hashmap" resultType="UserModel">
		SELECT *
		FROM HANJU_USER
	</select>
	<insert id="insertUser" parameterType="hashmap" >
		INSERT INTO HANJU_USER
		VALUES(#{userId},#{password},#{userName},#{status},#{phone},#{email},TO_DATE(#{birthday}, 'YYYY-MM-DD'),SYSDATE,0,#{zipNo},#{roadAddrPart1},#{addrDetail})
	</insert>
	<update id="modifyUser" parameterType="hashmap">
		UPDATE HANJU_USER
		SET
			PASSWORD=#{password},
			USER_NAME=#{userName},
			PHONE=#{phone},
			EMAIL=#{email},
			BIRTHDAY=TO_DATE(#{birthday}, 'YYYY-MM-DD'),
			ZIPNO=#{zipNo},
			ROADADDRPART1=#{roadAddrPart1},
			ADDRDETAIL=#{addrDetail}
		WHERE USER_ID = #{userId} 
	</update>
	<delete id="deleteUser" parameterType="hashmap">
		DELETE
		FROM HANJU_USER
		WHERE USER_ID = #{userId} 
	</delete>
	<select id="orderStatus" parameterType="hashmap" resultType="com.example.hanju.user.model.OrderState">	
		SELECT STATUS, COUNT(*) AS CNT
		FROM HANJU_BILL
		WHERE USER_ID = #{userId} 
		GROUP BY STATUS
	</select>
	<update id="pointChange" parameterType="hashmap">
		UPDATE HANJU_USER
		SET POINT = POINT - #{point}
		WHERE USER_ID = #{userId}
	</update>
	<select id="getFavoriteItemList" parameterType="hashmap" resultType="Favorite">
		SELECT C.PARENT_CODE TYPE,
		P.PRICE, P.PRODUCT_NAME,
		P.PRODUCT_ID,
		I.FILE_PATH,
		NS.SELL_ID,
		CASE WHEN NS.SELL_ID IS NULL THEN P.PRODUCT_ID ELSE NS.SELL_ID END AS FK_ID
		FROM HANJU_FAVORITE F
		INNER JOIN HANJU_PRODUCT P ON P.PRODUCT_ID = F.PRODUCT_ID
		INNER JOIN HANJU_IMAGE I ON I.FK_ID = P.PRODUCT_ID
		INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
		LEFT JOIN HANJU_NORMAL_SELL NS ON NS.PRODUCT_ID = P.PRODUCT_ID
		WHERE USER_ID = #{userId} AND I.FILE_STATUS = 'T'
		OFFSET #{start} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	<delete id="deleteFavoriteItem" parameterType="hashmap">
		DELETE
		FROM HANJU_FAVORITE
		WHERE USER_ID = #{userId} AND PRODUCT_ID = #{productId}
	</delete>
	<select id="favoriteCount" parameterType="hashmap" resultType="Integer">	
		SELECT COUNT(*) 
		FROM HANJU_FAVORITE
		WHERE USER_ID = #{userId} 
	</select>
	<select id="getOrderList" parameterType="hashmap" resultType="OrderItem">
		SELECT B.BILL_ID,P.PRODUCT_ID,N.SELL_ID,P.PRICE,N.DISCOUNT,C.CODE_NAME,C.PARENT_CODE,I.FILE_PATH,B.STATUS,TO_CHAR(B.CDATETIME, 'YYYY-MM-DD') AS CDATETIME,B.PRODUCT_COUNT,B.KIND,P.PRODUCT_NAME,R.CONTENT,
	      CASE WHEN R.COMMENT_ID IS NULL THEN 'N'
	      ELSE 'Y'
	      END AS ISCOMMENT
	      FROM HANJU_BILL B
	      INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
	      INNER JOIN HANJU_NORMAL_SELL N ON B.PRODUCT_ID = N.PRODUCT_ID
	      INNER JOIN HANJU_IMAGE I ON I. FK_ID = B.PRODUCT_ID
	      INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
	      LEFT JOIN HANJU_COMMENT R ON R.BILL_ID = B.BILL_ID
	      WHERE I.FILE_STATUS = 'T' AND B.USER_ID = #{userId} AND C.KIND = 'PRODUCT_CODE'
	      ORDER BY B.CDATETIME DESC
	      OFFSET #{start} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	<select id="orderCount" parameterType="hashmap" resultType="Integer">	
		SELECT COUNT(*) 
		FROM HANJU_BILL
		WHERE USER_ID = #{userId} AND KIND = 'N'
	</select>
	<select id="reviewPage" parameterType="hashmap" resultType="OrderItem">
		SELECT B.BILL_ID,P.PRODUCT_ID,N.SELL_ID,P.PRICE,N.DISCOUNT,C.CODE_NAME,C.PARENT_CODE,I.FILE_PATH,B.STATUS,TO_CHAR(B.CDATETIME, 'YYYY-MM-DD') AS CDATETIME,B.PRODUCT_COUNT,B.KIND,P.PRODUCT_NAME,R.CONTENT,
	      CASE WHEN R.COMMENT_ID IS NULL THEN 'N'
	      ELSE 'Y'
	      END AS ISCOMMENT
	      FROM HANJU_BILL B
	      INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
	      INNER JOIN HANJU_NORMAL_SELL N ON B.PRODUCT_ID = N.PRODUCT_ID
	      INNER JOIN HANJU_IMAGE I ON I. FK_ID = B.PRODUCT_ID
	      INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
	      LEFT JOIN HANJU_COMMENT R ON R.BILL_ID = B.BILL_ID
	      WHERE I.FILE_STATUS = 'T' AND B.USER_ID = #{userId} AND C.KIND = 'PRODUCT_CODE' AND B.STATUS = 'C'
	      ORDER BY B.CDATETIME DESC
	      OFFSET #{start} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	<select id="reviewCount" parameterType="hashmap" resultType="Integer">	
		SELECT COUNT(*) 
	    FROM HANJU_COMMENT
		WHERE USER_ID = #{userId} 
	</select>
	<insert id="reviewWrite" parameterType="hashmap" useGeneratedKeys="true" keyProperty="COMMENT_ID" keyColumn="COMMENT_ID">
		INSERT INTO HANJU_COMMENT
		VALUES (main_seq.nextVal,#{billId},#{userId},#{reviewText},#{starRating},SYSDATE,null)
	</insert>
	<insert id="registerImg" parameterType="hashmap" >
		INSERT INTO HANJU_IMAGE
		VALUES (image_seq.nextVal, #{commentId}, #{fileName}, #{fileOrgName}, #{filePath}, #{fileStatus})
	</insert>
	<select id="gudokCheck" parameterType="hashmap" resultType="GudokCheck">
		SELECT HS.SUBSCRIBE_ID, TO_CHAR(HSS.SUB_DATE, 'YYYY-MM-DD') AS SUB_DATE, NEXT_SUB, TITLE, ARRIVE_DATE, FILE_PATH
		FROM HANJU_SUBSCRIBE_STATUS HSS
		INNER JOIN HANJU_SUBSCRIBE HS ON HS.SUBSCRIBE_ID = HSS.SUBSCRIBE_ID
		INNER JOIN HANJU_IMAGE HI ON HI.FK_ID = HS.SUBSCRIBE_ID
		WHERE HI.FILE_STATUS = 'T' AND HSS.USER_ID = #{userId}
		OFFSET #{start} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	<select id="gudokCount" parameterType="hashmap" resultType="Integer">	
		SELECT COUNT(*) 
		FROM HANJU_SUBSCRIBE_STATUS
		WHERE USER_ID = #{userId} 
	</select>
	<update id="gudokState" parameterType="hashmap">
		UPDATE HANJU_SUBSCRIBE_STATUS
		SET NEXT_SUB = 'N'
		WHERE SUBSCRIBE_ID = #{subscribeId} AND USER_ID = #{userId}
	</update>
</mapper>
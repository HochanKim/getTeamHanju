<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hanju.cart.mapper.CartMapper">
    <select id="viewCart" parameterType="hashmap" resultType="CartEntity">
        SELECT C.*, I.FILE_PATH, P.PRODUCT_NAME, P.PRICE, DIS.DISCOUNT
        FROM HANJU_CART C
        INNER JOIN HANJU_IMAGE I ON C.PRODUCT_ID = I.FK_ID
        INNER JOIN HANJU_PRODUCT P ON P.PRODUCT_ID = C.PRODUCT_ID
        INNER JOIN (
        (SELECT C.CART_ID, NVL(NS.DISCOUNT,0) DISCOUNT
        FROM HANJU_CART C
        LEFT JOIN HANJU_NORMAL_SELL NS ON NS.PRODUCT_ID = C.PRODUCT_ID
        WHERE C.KIND = 'N')
        UNION
        (SELECT C.CART_ID, NVL(PS.DISCOUNT,0) DISCOUNT
        FROM HANJU_CART C
        LEFT JOIN HANJU_PICKUP_STOCK PS ON PS.PRODUCT_ID = C.PRODUCT_ID AND PS.STORE_ID = C.STORE_ID
        WHERE C.KIND = 'P')
        ) DIS ON DIS.CART_ID = C.CART_ID
        WHERE I.FILE_STATUS = 'T' AND USER_ID = #{userId}
    </select>
    <select id="storeStockCheck" parameterType="hashmap" resultType="int">
        SELECT STOCK
        FROM HANJU_PICKUP_STOCK
        WHERE PRODUCT_ID = #{productId} AND STORE_ID = #{storeId}
    </select>
    <select id="stockCheck" parameterType="hashmap" resultType="int">
        SELECT STOCK
        FROM HANJU_PRODUCT
        WHERE PRODUCT_ID = #{productId}
    </select>
    <update id="cartStockChange" parameterType="hashmap">
        UPDATE HANJU_CART
        <if test="value.equals('plus')">
            SET PRODUCT_COUNT = PRODUCT_COUNT+1
        </if>
        <if test="value.equals('minus')">
            SET PRODUCT_COUNT = PRODUCT_COUNT-1
        </if>
        WHERE CART_ID = #{cartId}
    </update>
    <delete id="cartItemDelete" parameterType="hashmap">
        DELETE
        FROM HANJU_CART
        WHERE CART_ID = #{cartId}
    </delete>
    <insert id="addCart" parameterType="hashmap">
        INSERT
        INTO HANJU_CART (CART_ID,USER_ID,PRODUCT_ID,PRODUCT_COUNT,KIND,CDATETIME)
        VALUES (CART_SEQ.NEXTVAL,#{userId},#{productId},#{productCount},#{kind},sysdate)
    </insert>
    <insert id="addPickupCart" parameterType="hashmap">
        INSERT
        INTO HANJU_CART (CART_ID,USER_ID,PRODUCT_ID,PRODUCT_COUNT,KIND,STORE_ID,CDATETIME,PICKUP_DATE)
        VALUES (CART_SEQ.NEXTVAL,#{userId},#{productId},#{productCount},#{kind},#{storeId},sysdate,#{pickupDate})
    </insert>
    <select id="pickupCartCheck" parameterType="hashmap" resultType="CartCheckDto">
        SELECT CART_ID, PRODUCT_COUNT
        FROM HANJU_CART
        WHERE PRODUCT_ID = #{productId} AND STORE_ID = #{storeId} AND KIND = #{kind} AND USER_ID = #{userId}
    </select>
    <select id="cartCheck" parameterType="hashmap" resultType="CartCheckDto">
        SELECT CART_ID, PRODUCT_COUNT
        FROM HANJU_CART
        WHERE PRODUCT_ID = #{productId} AND KIND = #{kind} AND USER_ID = #{userId}
    </select>
    <update id="updateCart" parameterType="hashmap">
        UPDATE HANJU_CART
        SET PRODUCT_COUNT = PRODUCT_COUNT + #{productCount}
        WHERE CART_ID = #{cartId}
    </update>
    <select id="getCartItem" parameterType="hashmap" resultType="CartEntity">
        SELECT *
        FROM HANJU_CART
        WHERE CART_ID = #{cartId}
    </select>
    <select id="cartSumPrice" parameterType="hashmap" resultType="int">
        SELECT SUM(P.PRICE*C.PRODUCT_COUNT)
        FROM HANJU_CART C
        INNER JOIN HANJU_PRODUCT P ON P.PRODUCT_ID = C.PRODUCT_ID
        WHERE CART_ID IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="discountCartSumPrice" parameterType="hashmap" resultType="int">
        SELECT ROUND(SUM(P.PRICE*C.PRODUCT_COUNT*(100-DIS.DISCOUNT)/100))
        FROM HANJU_CART C
        INNER JOIN HANJU_PRODUCT P ON P.PRODUCT_ID = C.PRODUCT_ID
        INNER JOIN  (
        (SELECT C.CART_ID, NVL(NS.DISCOUNT,0) DISCOUNT
        FROM HANJU_CART C
        LEFT JOIN HANJU_NORMAL_SELL NS ON NS.PRODUCT_ID = C.PRODUCT_ID
        WHERE C.KIND = 'N')
        UNION
        (SELECT C.CART_ID, NVL(PS.DISCOUNT,0) DISCOUNT
        FROM HANJU_CART C
        LEFT JOIN HANJU_PICKUP_STOCK PS ON PS.PRODUCT_ID = C.PRODUCT_ID AND PS.STORE_ID = C.STORE_ID
        WHERE C.KIND = 'P')) DIS ON DIS.CART_ID = C.CART_ID
        WHERE C.CART_ID IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="getCartName" parameterType="hashmap" resultType="String">
        SELECT P.PRODUCT_NAME
        FROM HANJU_CART C
        INNER JOIN HANJU_PRODUCT P ON C.PRODUCT_ID = P.PRODUCT_ID
        WHERE CART_ID IN
        <foreach item="id" collection="nameList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <insert id="addBill" parameterType="CartEntity" useGeneratedKeys="true" keyProperty="billId">
        <selectKey keyProperty="billId" resultType="int" order="BEFORE">
            SELECT BILL_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT
        INTO HANJU_BILL (BILL_ID,PRODUCT_ID,PRODUCT_COUNT,USER_ID,CDATETIME,STATUS,KIND)
        VALUES (#{billId},#{productId},#{productCount},#{userId},sysdate,'B',#{kind})
    </insert>
    <insert id="addCartBill" parameterType="hashmap">
        INSERT
        INTO HANJU_PICKUP_BILL (BILL_ID,STORE_ID,PICKUP_DATE,PICKUP_STATUS)
        VALUES (#{billId},#{storeId},#{pickupDate},'B')
    </insert>
    <insert id="subPayment" parameterType="hashmap">
        INSERT
        INTO HANJU_SUBSCRIBE_STATUS (SUBSCRIBE_ID,USER_ID,SUB_DATE,NEXT_SUB)
        VALUES (#{subId},#{userId},sysdate,'Y')
    </insert>
    <insert id="directPayment" parameterType="hashmap">
        INSERT
        INTO HANJU_BILL (BILL_ID,PRODUCT_ID,PRODUCT_COUNT,USER_ID,CDATETIME,STATUS,KIND)
        VALUES (BILL_SEQ.NEXTVAL,#{productId},#{count},#{userId},sysdate,'B',#{kind})
    </insert>
    <update id="changeAddr" parameterType="hashmap">
        UPDATE HANJU_USER
        SET ZIPNO = #{first}, ROADADDRPART1 = #{second}, ADDRDETAIL = #{third}
        WHERE USER_ID = #{userId}
    </update>
    <insert id="directPickupPayment" parameterType="hashmap" useGeneratedKeys="true" keyProperty="billId">
        <selectKey keyProperty="billId" resultType="int" order="BEFORE">
            SELECT BILL_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT
        INTO HANJU_BILL (BILL_ID,PRODUCT_ID,PRODUCT_COUNT,USER_ID,CDATETIME,STATUS,KIND)
        VALUES (#{billId},#{productId},#{count},#{userId},sysdate,'B',#{kind})
    </insert>
    <insert id="directPickupBill" parameterType="hashmap">
        INSERT
        INTO HANJU_PICKUP_BILL (BILL_ID,STORE_ID,PICKUP_DATE,PICKUP_STATUS)
        VALUES (#{billId},#{sId},#{date},'B')
    </insert>
    <select id="getDis" parameterType="hashmap" resultType="int">
        SELECT DISCOUNT
        FROM HANJU_PICKUP_STOCK
        WHERE STORE_ID = #{sId} AND PRODUCT_ID = #{pId}
    </select>


</mapper>
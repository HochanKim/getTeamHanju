<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hanju.pickup.mapper.PickupMapper">
	<select id="getBoardList" parameterType="hashmap" resultType="PickupBoardDto">
		SELECT P.PRODUCT_ID, P.PRODUCT_NAME,P.MADE_BY, P.PRICE, P.ALCOHOL, P.COLOR, P.MATERIAL, P.CAPACITY, I.FILE_PATH
		FROM HANJU_PRODUCT P
		LEFT JOIN HANJU_IMAGE I ON P.PRODUCT_ID = I.FK_ID
		WHERE P.TYPE = 'WINE' AND P.STOCK != 0 AND  P.PRODUCT_NAME LIKE '%'||#{searchKeyword}||'%'
	</select>
	
	<!-- 와인 픽업 리스트 -->
	<select id="getPickUpList" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT P.PRODUCT_NAME, TO_CHAR(PRICE, 'FM99,999') AS PRICE_COMMA, MADE_BY, MATERIAL, FILE_ORG_NAME, FILE_PATH, 
		P.PRODUCT_ID, TO_CHAR(NVL(AVG, 0), 'FM0.00') AS AVERAGE, NVL(COMENT_CNT, 0) AS COMENT_CNT
		FROM HANJU_PRODUCT P
		INNER JOIN HANJU_IMAGE I ON P.PRODUCT_ID = I.FK_ID
		INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
		LEFT JOIN (
		    SELECT B.PRODUCT_ID AS PRODUCT_ID, ROUND(AVG(GRADE), 2) AS AVG
		    FROM HANJU_BILL B
		    INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
		    INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY B.PRODUCT_ID
		) AVG ON P.PRODUCT_ID = AVG.PRODUCT_ID       
		LEFT JOIN (
		    SELECT B.PRODUCT_ID, COUNT(GRADE) AS COMENT_CNT
		    FROM HANJU_BILL B
		    INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
		    INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY B.PRODUCT_ID
		) CNT ON AVG.PRODUCT_ID = CNT.PRODUCT_ID
		WHERE I.FILE_STATUS = 'T' AND C.PARENT_CODE = 'W'
		<!-- P.TYPE이 codeList에 있을 경우 -->
        <if test="codeList != null">
            AND P.TYPE IN 
            <foreach collection="codeList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        
        <!-- 알코올 도수 -->
        <if test="alcohol != ''">
            <choose>
                <when test="alcohol == 1">AND (ALCOHOL >= 0 AND 10 > ALCOHOL)</when>
                <when test="alcohol == 2">AND (ALCOHOL >= 10)</when>
            </choose>
        </if>
        
        <!-- 당도 -->
        <if test="sweet != ''">
            <choose>
                <when test="sweet == 1">AND (SWEET = 1 OR SWEET = 2)</when>
                <when test="sweet == 2">AND (SWEET = 3)</when>
                <when test="sweet == 3">AND (SWEET = 4 OR SWEET = 5)</when>
            </choose>
        </if>

        <!-- 산미 -->
        <if test="sour != ''">
            <choose>
                <when test="sour == 1">AND (SOUR = 1 OR SOUR = 2)</when>
                <when test="sour == 2">AND (SOUR = 3)</when>
                <when test="sour == 3">AND (SOUR = 4 OR SOUR = 5)</when>
            </choose>
        </if>
        
        <!-- 탄산 -->
        <if test="sparkling != ''">
            <choose>
                <when test="sparkling == 1">AND SPARKLING = 0</when>
                <when test="sparkling == 2">AND SPARKLING >= 1</when>
            </choose>
        </if>
        
        <!-- 바디감 -->
        <if test="body != ''">
            <choose>
                <when test="body == 1">AND (BODY = 1 OR BODY = 2)</when>
                <when test="body == 2">AND (BODY = 3)</when>
                <when test="body == 3">AND (BODY = 4 OR BODY = 5)</when>
            </choose>
        </if>
        
        <!-- 용량 -->
        <if test="capacity != ''">
            <choose>
                <when test="capacity == 1">AND (400 > CAPACITY)</when>
                <when test="capacity == 2">AND (CAPACITY >= 400 AND 700 > CAPACITY)</when>
                <when test="capacity == 3">AND (CAPACITY >= 700)</when>
            </choose>
        </if>
        
        <!-- 품종 -->
        <if test="material != ''">
        	AND MATERIAL = #{material}
        </if> 
        
        <!-- 원산지 -->
        <if test="madeBy != ''">
        	AND MADE_BY = #{madeBy}
        </if>
        AND C.PARENT_CODE = 'W'        
	</select>
	
	<!-- 와인 픽업 리스트 (품종) -->
	<select id="getMaterialList" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT MATERIAL
		FROM HANJU_PRODUCT P
		INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
		WHERE C.PARENT_CODE = 'W'
		ORDER BY MATERIAL
	</select>
	
	<!-- 와인 픽업 리스트 (원산지) -->
	<select id="getMadeByList" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT MADE_BY
		FROM HANJU_PRODUCT P
		INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
		WHERE C.PARENT_CODE = 'W'
		ORDER BY MADE_BY
	</select>
	
	<!-- 와인 종류 코드 리스트 -->
	<select id="selectCodeList" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT C1.KIND, C2.CODE_NAME, C2.CODE
		FROM HANJU_CODE C1
		INNER JOIN HANJU_CODE C2 ON C1.CODE = C2.PARENT_CODE
		WHERE C1.KIND = 'PRODUCT_CODE' AND C2.CODE IN ('WW', 'RW')
	</select>
	
	<!-- 신상품 목록 -->
	<select id="getNewPickUpWineList" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT PRODUCT_NAME, TO_CHAR(PRICE, 'FM99,999') AS PRICE_COMMA, MADE_BY, MATERIAL, FILE_ORG_NAME, FILE_PATH, P.PRODUCT_ID, 
		TO_CHAR(NVL(AVG, 0), 'FM0.00') AS AVERAGE, NVL(COMENT_CNT, 0) AS COMENT_CNT
		FROM HANJU_PRODUCT P
		INNER JOIN HANJU_IMAGE I ON P.PRODUCT_ID = I.FK_ID
		INNER JOIN HANJU_CODE C ON P.TYPE = C.CODE
		LEFT JOIN (
		    SELECT B.PRODUCT_ID AS PRODUCT_ID, ROUND(AVG(GRADE), 2) AS AVG
		    FROM HANJU_BILL B
		    INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
		    INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY B.PRODUCT_ID
		) AVG ON P.PRODUCT_ID = AVG.PRODUCT_ID       
		LEFT JOIN (
		    SELECT B.PRODUCT_ID, COUNT(GRADE) AS COMENT_CNT
		    FROM HANJU_BILL B
		    INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
		    INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY B.PRODUCT_ID
		) CNT ON AVG.PRODUCT_ID = CNT.PRODUCT_ID
		WHERE I.FILE_STATUS = 'T' AND 10 >= ROWNUM AND C.PARENT_CODE = 'W'
		ORDER BY PRODUCT_ID DESC
	</select>
	
	<!-- 베스트 셀러 -->
	<select id="getBestSellerWine" parameterType="hashmap" resultType="com.example.hanju.pickup.model.dto.PickupBoardDto">
		SELECT P.PRODUCT_NAME, P.PRICE, I.FILE_PATH, P.PRODUCT_ID, 
		TO_CHAR(PRICE, 'FM99,999') AS PRICE_COMMA, P.MATERIAL, TO_CHAR(NVL(AVG, 0), 'FM0.00') AS AVERAGE, NVL(COMENT_CNT, 0) AS COMENT_CNT, MADE_BY
		FROM    (
		    SELECT  P.PRODUCT_ID, COUNT(*) AS CNT
		    FROM    HANJU_BILL B
		    LEFT JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY P.PRODUCT_ID
		    ORDER BY CNT DESC
		    OFFSET 0 ROWS FETCH FIRST 10 ROWS ONLY
		) BEST
		INNER JOIN HANJU_PRODUCT P ON BEST.PRODUCT_ID = P.PRODUCT_ID
		INNER JOIN HANJU_IMAGE I ON P.PRODUCT_ID = I.FK_ID AND I.FILE_STATUS = 'T'
		LEFT JOIN (
            SELECT B.PRODUCT_ID AS PRODUCT_ID, ROUND(AVG(GRADE), 2) AS AVG
            FROM HANJU_BILL B
            INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
            INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
            WHERE P.TYPE IN ('WW', 'RW')
            GROUP BY B.PRODUCT_ID
        ) AVG ON P.PRODUCT_ID = AVG.PRODUCT_ID
        LEFT JOIN (
		    SELECT B.PRODUCT_ID, COUNT(GRADE) AS COMENT_CNT
		    FROM HANJU_BILL B
		    INNER JOIN HANJU_COMMENT C ON B.BILL_ID = C.BILL_ID
		    INNER JOIN HANJU_PRODUCT P ON B.PRODUCT_ID = P.PRODUCT_ID
		    WHERE P.TYPE IN ('WW', 'RW')
		    GROUP BY B.PRODUCT_ID
		) CNT ON AVG.PRODUCT_ID = CNT.PRODUCT_ID
		WHERE P.TYPE IN ('WW', 'RW')
	</select>
</mapper>